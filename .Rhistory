indiv <- colnames(col1)
indiv <- indiv[-1]
col2 <- col1 %>% select(-ID)
loci <- data.frame(ID=SNPs,stringsAsFactors = F)
loci <- loci %>%
separate(ID, into = c("scaffold","pos"),sep = "-")
loc <- data.frame(ID=indiv,stringsAsFactors = F)
locs <- loc %>% separate(ID, into = c("spp","loc","indiv"),sep = "_") %>% select(spp)
PM_subpops <- loc %>% separate(ID, into = c("spp","loc","indiv"),sep = "_") %>% select(loc)
#transpose matrix
col2 <- data.frame(t(col2),stringsAsFactors = F)
rownames(col2) <- indiv
colnames(col2) <- SNPs
#check amount of missing data per individual
col2 <- data.frame(lapply(col2, gsub, pattern = "./.", replacement = NA, fixed = TRUE))
col2 <- data.frame(lapply(col2, gsub, pattern = "0/0", replacement = 0, fixed = TRUE))
col2 <- data.frame(lapply(col2, gsub, pattern = "0/1", replacement = 1, fixed = TRUE))
col2 <- data.frame(lapply(col2, gsub, pattern = "1/1", replacement = 2, fixed = TRUE))
save(col2,file = "Genotypes/gentype.for.PCA.test.rda")
save(col2,file = "SNPsets/gentype.for.PCA.test.rda")
#convert to genlight object for PCA
snp <- new("genlight",
col2,
chromosome=loci$scaffold,
position=loci$pos,
pop=locs$spp)
indNames(snp) <- indiv
save(snp,file = "genlight_pca_test.RData")
#running PCA analysis
#getting colors
locs$col <- NA
for(i in 1:length(locs$spp)){
if(locs$spp[i] == "LA"){locs$col[i] <- "blue"}
if(locs$spp[i] == "IF"){locs$col[i] <- "dark green"}
if(locs$spp[i] == "PM"){locs$col[i] <- "purple"}
}
#run pca
pca <- glPca(snp,nf = 10)
save(pca,file = "pca_test.RData")
#plot pca
plot(pca$scores[,1], pca$scores[,2],
col=locs$col,cex=0.5)
plot(pca$scores[,1], pca$scores[,3],
col=locs$col,cex=0.5)
#plot pca
plot(pca$scores[,1], pca$scores[,2],
col=locs$col,cex=0.5)
#make a tree
#construct tree
tre <- nj(dist(as.matrix(snp)))
#plot tree
plot(tre, typ="fan", cex=0.7)
##run PCA for each population ####
##Black Mallard
bmr <- nl[,grep(pattern = "BMR",x=colnames(nl),ignore.case = T)]
bmr <- data.frame(CHROM=nl$CHROM,POS=nl$POS,bmr)
#get SNPs for sea lamrpey and combine with native lamprey
pm_gts <- merge(nl_SNPs,bmr)
all_SNPs <- merge(pm_gts,nl_targets)
#convert to genlight formatting
col1 <- all_SNPs %>%
mutate(ID=paste(CHROM,POS,sep = "-")) %>%
select(ID,everything()) %>%
select(-CHROM:-POS) %>%
select(-target,-pGT)
row.names(col1) <- col1$ID
SNPs <- rownames(col1)
indiv <- colnames(col1)
indiv <- indiv[-1]
col2 <- col1 %>% select(-ID)
loci <- data.frame(ID=SNPs,stringsAsFactors = F)
loci <- loci %>%
separate(ID, into = c("scaffold","pos"),sep = "-")
loc <- data.frame(ID=indiv,stringsAsFactors = F)
locs <- loc %>% separate(ID, into = c("spp","loc","indiv"),sep = "_") %>% select(spp)
PM_subpops <- loc %>% separate(ID, into = c("spp","loc","indiv"),sep = "_") %>% select(loc)
#transpose matrix
col2 <- data.frame(t(col2),stringsAsFactors = F)
rownames(col2) <- indiv
colnames(col2) <- SNPs
#check amount of missing data per individual
col2 <- data.frame(lapply(col2, gsub, pattern = "./.", replacement = NA, fixed = TRUE))
col2 <- data.frame(lapply(col2, gsub, pattern = "0/0", replacement = 0, fixed = TRUE))
col2 <- data.frame(lapply(col2, gsub, pattern = "0/1", replacement = 1, fixed = TRUE))
col2 <- data.frame(lapply(col2, gsub, pattern = "1/1", replacement = 2, fixed = TRUE))
save(col2,file = "SNPsets/gentype.for.PCA.BMR.rda")
#convert to genlight object for PCA
snp <- new("genlight",
col2,
chromosome=loci$scaffold,
position=loci$pos,
pop=locs$spp)
indNames(snp) <- indiv
save(snp,file = "genlight_pca_BMR.RData")
#running PCA analysis
#getting colors
locs$col <- NA
for(i in 1:length(locs$spp)){
if(locs$spp[i] == "LA"){locs$col[i] <- "blue"}
if(locs$spp[i] == "IF"){locs$col[i] <- "dark green"}
if(locs$spp[i] == "PM"){locs$col[i] <- "purple"}
}
#run pca
pca <- glPca(snp,nf = 10)
#plot pca
plot(pca$scores[,1], pca$scores[,2],
col=locs$col,cex=0.5)
#running PCA analysis
#getting colors
locs$col <- NA
for(i in 1:length(locs$spp)){
if(locs$spp[i] == "LA"){locs$col[i] <- "blue"}
if(locs$spp[i] == "IF"){locs$col[i] <- "dark green"}
if(locs$spp[i] == "PM"){locs$col[i] <- "purple"}
}
View(locs)
table(is.na(locs$col))
#make a tree
#construct tree
tre <- nj(dist(as.matrix(snp)))
View(snp)
##run PCA for each population ####
##Black Mallard
bmr <- nl[,grep(pattern = "BMR",x=colnames(nl),ignore.case = T)]
bmr <- data.frame(CHROM=nl$CHROM,POS=nl$POS,bmr)
#get SNPs for sea lamrpey and combine with native lamprey
pm_gts <- merge(nl_SNPs,bmr)
gt_missing <- rowSums(bmr == "./.")
#get SNPs for sea lamrpey and combine with native lamprey
pm_gts <- merge(nl_SNPs,bmr)
bmrsums <- colSums(bmr == "./.")
hist(bmrsums)
table(bmrsums < 1000)
table(bmrsums > 1000)
table(bmrsums > 10000)
table(bmrsums > 100000)
table(bmrsums > 1000000)
table(bmrsums > 100000)
table(bmrsums > 200000)
pm_gts$pGT <- (1-(gt_missing/1088))
bmrsums <- colSums(pm_gts == "./.")
hist(bmrsums)
bmrsums
bmrsums <- colSums(bmr == "./.")
gt_missing <- rowSums(bmr == "./.")
bmr$pGT <- (1-(gt_missing/1088))
min(bmr$pGT)
#select SNPs with minimal missing data
bmr_SNPs <- bmr %>% filter(pGT > 0.9) %>% select(CHROM,POS)
#select SNPs with minimal missing data
bmr_SNPs <- bmr %>% filter(pGT > 0.95) %>% select(CHROM,POS)
target <- match_tags(SNPs = bmr_SNPs,tags = rapture)
target1 <- target[[2]]
bmr_targets <- merge(target1,bmr)
bmr_targets <- merge(target1,bmr_SNPs)
all_SNPs <- merge(bmr_SNPs,nl_targets)
View(all_SNPs)
bmr_targets <- merge(target1,bmr)
all_SNPs <- merge(bmr_targets,nl_targets)
all_SNPs <- bmr_targets %>%
full_join(nl_targets, by = c("target"))
all_SNPs <- bmr_targets %>%
full_join(nl_targets, by = c("CHROM","POS","target"))
#convert to genlight formatting
col1 <- all_SNPs %>%
mutate(ID=paste(CHROM,POS,sep = "-")) %>%
select(ID,everything()) %>%
select(-CHROM:-POS) %>%
select(-target,-pGT)
colnames(all_SNPs)
View(all_SNPs)
#convert to genlight formatting
col1 <- all_SNPs %>%
mutate(ID=paste(CHROM,POS,sep = "-")) %>%
select(ID,everything()) %>%
select(-CHROM:-POS) %>%
select(-target,-pGT.x,-pGT.y)
row.names(col1) <- col1$ID
SNPs <- rownames(col1)
indiv <- colnames(col1)
indiv <- indiv[-1]
col2 <- col1 %>% select(-ID)
table(is.na(all_SNPs))
all_SNPs[is.na(all_SNPs)] <- "0/0"
hist(bmr$pGT)
hist(colSums(all_SNPs))
hist(colSums(all_SNPs[,-1:2]))
hist(colSums(all_SNPs[,-c(1:2)]))
hist(as.numeric(colSums(all_SNPs[,-c(1:2)])))
table(colSums(all_SNPs))
table(colSums(all_SNPs == "./."))
hist(colSums(all_SNPs == "./."))
which(colSums(all_SNPs == "./.") > 30000)
#remove individuals with > 0.8 proportion of missing data
all_SNPs[,-which(colSums(all_SNPs == "./.") > 30000)]
#remove individuals with > 0.8 proportion of missing data
all_SNPs <- all_SNPs[,-which(colSums(all_SNPs == "./.") > 30000)]
#convert to genlight formatting
col1 <- all_SNPs %>%
mutate(ID=paste(CHROM,POS,sep = "-")) %>%
select(ID,everything()) %>%
select(-CHROM:-POS) %>%
select(-target,-pGT.x,-pGT.y)
all_SNPs
row.names(col1) <- col1$ID
SNPs <- rownames(col1)
indiv <- colnames(col1)
indiv <- indiv[-1]
col2 <- col1 %>% select(-ID)
loci <- data.frame(ID=SNPs,stringsAsFactors = F)
loci <- loci %>%
separate(ID, into = c("scaffold","pos"),sep = "-")
loc <- data.frame(ID=indiv,stringsAsFactors = F)
locs <- loc %>% separate(ID, into = c("spp","loc","indiv"),sep = "_") %>% select(spp)
PM_subpops <- loc %>% separate(ID, into = c("spp","loc","indiv"),sep = "_") %>% select(loc)
#transpose matrix
col2 <- data.frame(t(col2),stringsAsFactors = F)
rownames(col2) <- indiv
colnames(col2) <- SNPs
#check amount of missing data per individual
col2 <- data.frame(lapply(col2, gsub, pattern = "./.", replacement = NA, fixed = TRUE))
col2 <- data.frame(lapply(col2, gsub, pattern = "0/0", replacement = 0, fixed = TRUE))
col2 <- data.frame(lapply(col2, gsub, pattern = "0/1", replacement = 1, fixed = TRUE))
col2 <- data.frame(lapply(col2, gsub, pattern = "1/1", replacement = 2, fixed = TRUE))
save(col2,file = "SNPsets/gentype.for.PCA.BMR.rda")
#convert to genlight object for PCA
snp <- new("genlight",
col2,
chromosome=loci$scaffold,
position=loci$pos,
pop=locs$spp)
indNames(snp) <- indiv
#running PCA analysis
#getting colors
locs$col <- NA
for(i in 1:length(locs$spp)){
if(locs$spp[i] == "LA"){locs$col[i] <- "blue"}
if(locs$spp[i] == "IF"){locs$col[i] <- "dark green"}
if(locs$spp[i] == "PM"){locs$col[i] <- "purple"}
}
#run pca
pca <- glPca(snp,nf = 10)
#plot pca
plot(pca$scores[,1], pca$scores[,2],
col=locs$col,cex=0.5)
plot(pca$scores[,1], pca$scores[,3],
col=locs$col,cex=0.5)
#plot pca
plot(pca$scores[,1], pca$scores[,2],
col=locs$col,cex=0.5)
#make a tree
#construct tree
tre <- nj(dist(as.matrix(snp)))
#plot tree
plot(tre, typ="fan", cex=0.7)
##Ocqueoc
ocq <- nl[,grep(pattern = "OCQ",x=colnames(nl),ignore.case = T)]
ocq <- data.frame(CHROM=nl$CHROM,POS=nl$POS,ocq)
#get SNPs for sea lamrpey and combine with native lamprey
pm_gts <- merge(nl_SNPs,ocq)
ocqsums <- colSums(ocq == "./.")
gt_missing <- rowSums(ocq == "./.")
ocq$pGT <- (1-(gt_missing/396))
#select SNPs with minimal missing data
ocq_SNPs <- ocq %>% filter(pGT > 0.95) %>% select(CHROM,POS)
target <- match_tags(SNPs = ocq_SNPs,tags = rapture)
target1 <- target[[2]]
ocq_targets <- merge(target1,ocq)
all_SNPs <- merge(ocq_targets,nl_targets)
all_SNPs <- ocq_targets %>%
full_join(nl_targets, by = c("CHROM","POS","target"))
all_SNPs[is.na(all_SNPs)] <- "0/0"
table(colSums(all_SNPs))
hist(colSums(all_SNPs == "./.")
)
#remove individuals with > 0.8 proportion of missing data
all_SNPs <- all_SNPs[,-which(colSums(all_SNPs == "./.") > 30000)]
#convert to genlight formatting
col1 <- all_SNPs %>%
mutate(ID=paste(CHROM,POS,sep = "-")) %>%
select(ID,everything()) %>%
select(-CHROM:-POS) %>%
select(-target,-pGT.x,-pGT.y)
row.names(col1) <- col1$ID
SNPs <- rownames(col1)
indiv <- colnames(col1)
indiv <- indiv[-1]
col2 <- col1 %>% select(-ID)
loci <- data.frame(ID=SNPs,stringsAsFactors = F)
loci <- loci %>%
separate(ID, into = c("scaffold","pos"),sep = "-")
loc <- data.frame(ID=indiv,stringsAsFactors = F)
locs <- loc %>% separate(ID, into = c("spp","loc","indiv"),sep = "_") %>% select(spp)
PM_subpops <- loc %>% separate(ID, into = c("spp","loc","indiv"),sep = "_") %>% select(loc)
#transpose matrix
col2 <- data.frame(t(col2),stringsAsFactors = F)
rownames(col2) <- indiv
colnames(col2) <- SNPs
#check amount of missing data per individual
col2 <- data.frame(lapply(col2, gsub, pattern = "./.", replacement = NA, fixed = TRUE))
col2 <- data.frame(lapply(col2, gsub, pattern = "0/0", replacement = 0, fixed = TRUE))
col2 <- data.frame(lapply(col2, gsub, pattern = "0/1", replacement = 1, fixed = TRUE))
col2 <- data.frame(lapply(col2, gsub, pattern = "1/1", replacement = 2, fixed = TRUE))
save(col2,file = "SNPsets/gentype.for.PCA.ocq.rda")
#convert to genlight object for PCA
snp <- new("genlight",
col2,
chromosome=loci$scaffold,
position=loci$pos,
pop=locs$spp)
indNames(snp) <- indiv
save(snp,file = "genlight_pca_ocq.RData")
#running PCA analysis
#getting colors
locs$col <- NA
for(i in 1:length(locs$spp)){
if(locs$spp[i] == "LA"){locs$col[i] <- "blue"}
if(locs$spp[i] == "IF"){locs$col[i] <- "dark green"}
if(locs$spp[i] == "PM"){locs$col[i] <- "purple"}
}
#run pca
pca <- glPca(snp,nf = 10)
save(pca,file = "SNPsets/pca_ocq.RData")
#plot pca
plot(pca$scores[,1], pca$scores[,2],
col=locs$col,cex=0.5)
plot(pca$scores[,1], pca$scores[,3],
col=locs$col,cex=0.5)
##Cheboygan
che <- nl[,grep(pattern = "CHE",x=colnames(nl),ignore.case = T)]
che <- data.frame(CHROM=nl$CHROM,POS=nl$POS,che)
#get SNPs for sea lamrpey and combine with native lamprey
pm_gts <- merge(nl_SNPs,che)
chesums <- colSums(che == "./.")
gt_missing <- rowSums(che == "./.")
che$pGT <- (1-(gt_missing/396))
#select SNPs with minimal missing data
che_SNPs <- che %>% filter(pGT > 0.95) %>% select(CHROM,POS)
target <- match_tags(SNPs = che_SNPs,tags = rapture)
target1 <- target[[2]]
che$pGT <- (1-(gt_missing/52))
#select SNPs with minimal missing data
che_SNPs <- che %>% filter(pGT > 0.95) %>% select(CHROM,POS)
target <- match_tags(SNPs = che_SNPs,tags = rapture)
#get SNPs for sea lamrpey and combine with native lamprey
pm_gts <- merge(nl_SNPs,che)
chesums <- colSums(che == "./.")
gt_missing <- rowSums(che == "./.")
che$pGT <- (1-(gt_missing/52))
#select SNPs with minimal missing data
che_SNPs <- che %>% filter(pGT > 0.95) %>% select(CHROM,POS)
target <- match_tags(SNPs = che_SNPs,tags = rapture)
che_targets <- merge(target1,che)
all_SNPs <- merge(che_targets,nl_targets)
target <- match_tags(SNPs = che_SNPs,tags = rapture)
#select SNPs with minimal missing data
che_SNPs <- che %>% filter(pGT > 0.9) %>% select(CHROM,POS)
table(che$pGT)
#select SNPs with minimal missing data
che_SNPs <- che %>% filter(pGT > 0.7) %>% select(CHROM,POS)
target <- match_tags(SNPs = che_SNPs,tags = rapture)
target1 <- target[[2]]
che_targets <- merge(target1,che)
all_SNPs <- merge(che_targets,nl_targets)
all_SNPs <- che_targets %>%
full_join(nl_targets, by = c("CHROM","POS","target"))
all_SNPs[is.na(all_SNPs)] <- "0/0"
#remove individuals with > 0.8 proportion of missing data
all_SNPs <- all_SNPs[,-which(colSums(all_SNPs == "./.") > 30000)]
#convert to genlight formatting
col1 <- all_SNPs %>%
mutate(ID=paste(CHROM,POS,sep = "-")) %>%
select(ID,everything()) %>%
select(-CHROM:-POS) %>%
select(-target,-pGT.x,-pGT.y)
row.names(col1) <- col1$ID
SNPs <- rownames(col1)
indiv <- colnames(col1)
indiv <- indiv[-1]
col2 <- col1 %>% select(-ID)
loci <- data.frame(ID=SNPs,stringsAsFactors = F)
loci <- loci %>%
separate(ID, into = c("scaffold","pos"),sep = "-")
loc <- data.frame(ID=indiv,stringsAsFactors = F)
locs <- loc %>% separate(ID, into = c("spp","loc","indiv"),sep = "_") %>% select(spp)
PM_subpops <- loc %>% separate(ID, into = c("spp","loc","indiv"),sep = "_") %>% select(loc)
#transpose matrix
col2 <- data.frame(t(col2),stringsAsFactors = F)
rownames(col2) <- indiv
colnames(col2) <- SNPs
#check amount of missing data per individual
col2 <- data.frame(lapply(col2, gsub, pattern = "./.", replacement = NA, fixed = TRUE))
col2 <- data.frame(lapply(col2, gsub, pattern = "0/0", replacement = 0, fixed = TRUE))
col2 <- data.frame(lapply(col2, gsub, pattern = "0/1", replacement = 1, fixed = TRUE))
col2 <- data.frame(lapply(col2, gsub, pattern = "1/1", replacement = 2, fixed = TRUE))
save(col2,file = "SNPsets/gentype.for.PCA.che.rda")
#convert to genlight object for PCA
snp <- new("genlight",
col2,
chromosome=loci$scaffold,
position=loci$pos,
pop=locs$spp)
indNames(snp) <- indiv
save(snp,file = "genlight_pca_che.RData")
#running PCA analysis
#getting colors
locs$col <- NA
for(i in 1:length(locs$spp)){
if(locs$spp[i] == "LA"){locs$col[i] <- "blue"}
if(locs$spp[i] == "IF"){locs$col[i] <- "dark green"}
if(locs$spp[i] == "PM"){locs$col[i] <- "purple"}
}
#run pca
pca <- glPca(snp,nf = 10)
save(pca,file = "SNPsets/pca_che.RData")
#plot pca
plot(pca$scores[,1], pca$scores[,2],
col=locs$col,cex=0.5)
plot(pca$scores[,1], pca$scores[,3],
col=locs$col,cex=0.5)
#make a tree
#construct tree
tre <- nj(dist(as.matrix(snp)))
#plot tree
plot(tre, typ="fan", cex=0.7)
load("~/Desktop/Cloned_repositories/NbdLamprey/SNPsets/gentype.for.PCA.BMR.rda")
load("~/Desktop/Cloned_repositories/NbdLamprey/genlight_pca_BMR.RData")
#running PCA analysis
#getting colors
locs$col <- NA
for(i in 1:length(locs$spp)){
if(locs$spp[i] == "LA"){locs$col[i] <- "blue"}
if(locs$spp[i] == "IF"){locs$col[i] <- "dark green"}
if(locs$spp[i] == "PM"){locs$col[i] <- "purple"}
}
#run pca
pca <- glPca(snp,nf = 10)
View(snp)
snp@pop
##run PCA for each population ####
##Black Mallard
bmr <- nl[,grep(pattern = "BMR",x=colnames(nl),ignore.case = T)]
bmr <- data.frame(CHROM=nl$CHROM,POS=nl$POS,bmr)
#get SNPs for sea lamrpey and combine with native lamprey
pm_gts <- merge(nl_SNPs,bmr)
bmrsums <- colSums(bmr == "./.")
gt_missing <- rowSums(bmr == "./.")
bmr$pGT <- (1-(gt_missing/1088))
#select SNPs with minimal missing data
bmr_SNPs <- bmr %>% filter(pGT > 0.95) %>% select(CHROM,POS)
target <- match_tags(SNPs = bmr_SNPs,tags = rapture)
target1 <- target[[2]]
bmr_targets <- merge(target1,bmr)
all_SNPs <- merge(bmr_targets,nl_targets)
all_SNPs <- bmr_targets %>%
full_join(nl_targets, by = c("CHROM","POS","target"))
all_SNPs[is.na(all_SNPs)] <- "0/0"
table(colSums(all_SNPs))
#remove individuals with > 0.8 proportion of missing data
all_SNPs <- all_SNPs[,-which(colSums(all_SNPs == "./.") > 30000)]
#convert to genlight formatting
col1 <- all_SNPs %>%
mutate(ID=paste(CHROM,POS,sep = "-")) %>%
select(ID,everything()) %>%
select(-CHROM:-POS) %>%
select(-target,-pGT.x,-pGT.y)
row.names(col1) <- col1$ID
SNPs <- rownames(col1)
indiv <- colnames(col1)
indiv <- indiv[-1]
col2 <- col1 %>% select(-ID)
loci <- data.frame(ID=SNPs,stringsAsFactors = F)
loci <- loci %>%
separate(ID, into = c("scaffold","pos"),sep = "-")
loc <- data.frame(ID=indiv,stringsAsFactors = F)
locs <- loc %>% separate(ID, into = c("spp","loc","indiv"),sep = "_") %>% select(spp)
PM_subpops <- loc %>% separate(ID, into = c("spp","loc","indiv"),sep = "_") %>% select(loc)
#transpose matrix
col2 <- data.frame(t(col2),stringsAsFactors = F)
rownames(col2) <- indiv
colnames(col2) <- SNPs
#check amount of missing data per individual
col2 <- data.frame(lapply(col2, gsub, pattern = "./.", replacement = NA, fixed = TRUE))
col2 <- data.frame(lapply(col2, gsub, pattern = "0/0", replacement = 0, fixed = TRUE))
col2 <- data.frame(lapply(col2, gsub, pattern = "0/1", replacement = 1, fixed = TRUE))
col2 <- data.frame(lapply(col2, gsub, pattern = "1/1", replacement = 2, fixed = TRUE))
save(col2,file = "SNPsets/gentype.for.PCA.BMR.rda")
#convert to genlight object for PCA
snp <- new("genlight",
col2,
chromosome=loci$scaffold,
position=loci$pos,
pop=locs$spp)
indNames(snp) <- indiv
save(snp,file = "genlight_pca_BMR.RData")
#running PCA analysis
#getting colors
locs$col <- NA
for(i in 1:length(locs$spp)){
if(locs$spp[i] == "LA"){locs$col[i] <- "blue"}
if(locs$spp[i] == "IF"){locs$col[i] <- "dark green"}
if(locs$spp[i] == "PM"){locs$col[i] <- "purple"}
}
#run pca
pca <- glPca(snp,nf = 10)
save(pca,file = "SNPsets/pca_BMR.RData")
#plot pca
plot(pca$scores[,1], pca$scores[,2],
col=locs$col,cex=0.5)
save(pca,file = "SNPsets/pca_BMR.RData")
source("Homebrew/PwoP.R")
ca <- readLines("Software_outputs/bmr16.ConfigArchive")
